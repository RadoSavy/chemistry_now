// Sticky navbar on scroll
window.addEventListener("scroll", () => {
  const navbar = document.getElementById("navbar");
  if (window.scrollY > 50) {
    navbar.classList.add("bg-black", "shadow-md");
  } else {
    navbar.classList.remove("bg-black", "shadow-md");
  }
});

// Smooth scrolling
document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
  anchor.addEventListener("click", function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute("href"));
    if (target) {
      target.scrollIntoView({
        behavior: "smooth",
        block: "start",
      });
    }
  });
});

// Header fade-in animation
document.addEventListener("DOMContentLoaded", () => {
  const h2 = document.querySelector("header h2");
  const p = document.querySelector("header p");

  h2.style.opacity = 0;
  p.style.opacity = 0;

  setTimeout(() => {
    h2.style.transition = "opacity 1s ease-out, transform 1s ease-out";
    p.style.transition = "opacity 1.2s ease-out, transform 1.2s ease-out";
    h2.style.opacity = 1;
    h2.style.transform = "translateY(0)";
    p.style.opacity = 1;
    p.style.transform = "translateY(0)";
  }, 300);
});

// Modal with metal facts
const modal = document.createElement("div");
modal.id = "factModal";
modal.innerHTML = `
  <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#000000aa;display:flex;align-items:center;justify-content:center;z-index:1000;">
    <div style="background:white;padding:20px;max-width:400px;border-radius:10px;text-align:center;">
      <h3>üìò –§–∞–∫—Ç –∑–∞ –º–µ—Ç–∞–ª–∏—Ç–µ</h3>
      <p id="factText">–ú–µ—Ç–∞–ª–∏—Ç–µ –º–æ–≥–∞—Ç –¥–∞ —Å–µ —Ä–µ—Ü–∏–∫–ª–∏—Ä–∞—Ç –±–µ–∑–∫—Ä–∞–π–Ω–æ –±–µ–∑ –¥–∞ –≥—É–±—è—Ç –∫–∞—á–µ—Å—Ç–≤–æ—Ç–æ —Å–∏!</p>
      <button id="closeModal">–ó–∞—Ç–≤–æ—Ä–∏</button>
    </div>
  </div>
`;
modal.style.display = "none";
document.body.appendChild(modal);

document.getElementById("closeModal").onclick = () => {
  modal.style.display = "none";
};

function showFact(fact) {
  document.getElementById("factText").innerText = fact;
  modal.style.display = "flex";
}

// Example call:
document.getElementById("showFactBtn")?.addEventListener("click", () => {
  const facts = [
    "–ê–ª—É–º–∏–Ω–∏–µ–≤–∏—Ç–µ –∫–µ–Ω–æ–≤–µ —Å–µ —Ä–µ—Ü–∏–∫–ª–∏—Ä–∞—Ç –∑–∞ –ø–æ-–º–∞–ª–∫–æ –æ—Ç 60 –¥–Ω–∏.",
    "–†–µ—Ü–∏–∫–ª–∏—Ä–∞–Ω–∏—è—Ç –º–µ—Ç–∞–ª –∏–∑–ø–æ–ª–∑–≤–∞ 95% –ø–æ-–º–∞–ª–∫–æ –µ–Ω–µ—Ä–≥–∏—è –æ—Ç –Ω–æ–≤–∏—è.",
    "–ú–µ–¥—Ç–∞ –µ 100% —Ä–µ—Ü–∏–∫–ª–∏—Ä—É–µ–º–∞ –∏ –Ω—è–º–∞ –∑–∞–≥—É–±–∞ –Ω–∞ —Å–≤–æ–π—Å—Ç–≤–∞.",
    "–ú–µ—Ç–∞–ª–Ω–∏—è—Ç –æ—Ç–ø–∞–¥—ä–∫ –µ –Ω–∞–π-—Ü–µ–Ω–Ω–∏—è—Ç –≤–∏–¥ –æ—Ç–ø–∞–¥—ä–∫.",
    "–†–µ—Ü–∏–∫–ª–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ –µ–¥–Ω–∞ —Ç–æ—Å—Ç–µ—Ä –ø–µ—Å—Ç–∏ –µ–Ω–µ—Ä–≥–∏—è –∫–æ–ª–∫–æ—Ç–æ –∑–∞ 30 –º–∏–Ω—É—Ç–∏ —Ç–µ–ª–µ–≤–∏–∑–∏—è.",
  ];
  const randomFact = facts[Math.floor(Math.random() * facts.length)];
  showFact(randomFact);
});

// Counter animation
function animateCounter(id, target) {
  let count = 0;
  const el = document.getElementById(id);
  const interval = setInterval(() => {
    count += Math.ceil(target / 100);
    if (count >= target) {
      count = target;
      clearInterval(interval);
    }
    el.innerText = count;
  }, 30);
}

document.addEventListener("DOMContentLoaded", () => {
  animateCounter("canCount", 1240);
});

// Scroll reveal animation
function revealOnScroll() {
  document.querySelectorAll(".reveal").forEach((el) => {
    const rect = el.getBoundingClientRect();
    if (rect.top < window.innerHeight - 100) {
      el.classList.add("opacity-100", "translate-y-0");
    }
  });
}

window.addEventListener("scroll", revealOnScroll);
revealOnScroll();

// Keyboard shortcut (press 'R' for random fact)
document.addEventListener("keydown", (e) => {
  if (e.key.toLowerCase() === "r") {
    const facts = [
      "–°—Ç–æ–º–∞–Ω–∞—Ç–∞ —Å–µ —Ä–µ—Ü–∏–∫–ª–∏—Ä–∞ –Ω–∞–π-–º–Ω–æ–≥–æ –æ—Ç –≤—Å–∏—á–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏.",
      "–ê–ª—É–º–∏–Ω–∏—è—Ç –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –ø—Ä–µ—Ä–∞–±–æ—Ç–µ–Ω –±–µ–∑–∫—Ä–∞–π–Ω–æ.",
    ];
    showFact(facts[Math.floor(Math.random() * facts.length)]);
  }
});

// Quiz Game
const quizQuestions = [
  {
    question: "–ö–æ–π –º–µ—Ç–∞–ª —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ –Ω–∞–π-—á–µ—Å—Ç–æ –ø—Ä–∏ –∫–µ–Ω–æ–≤–µ—Ç–µ?",
    answers: ["–ñ–µ–ª—è–∑–æ", "–ú–µ–¥", "–ê–ª—É–º–∏–Ω–∏–π", "–¶–∏–Ω–∫"],
    correct: 2,
  },
  {
    question: "–ö–æ–π –æ—Ç —Å–ª–µ–¥–Ω–∏—Ç–µ –µ –ø–æ–ª–∑–∞ –æ—Ç —Ä–µ—Ü–∏–∫–ª–∏—Ä–∞–Ω–µ—Ç–æ?",
    answers: ["–ü–æ–≤–µ—á–µ –æ—Ç–ø–∞–¥—ä–∫", "–ü–µ—Å—Ç–∏ –µ–Ω–µ—Ä–≥–∏—è", "–ó–∞–≥—É–±–∞ –Ω–∞ —Ä–µ—Å—É—Ä—Å–∏", "–ü–æ–≤–µ—á–µ –∑–∞–º—ä—Ä—Å—è–≤–∞–Ω–µ"],
    correct: 1,
  },
];

let currentQuestion = 0;

function showQuestion() {
  const q = quizQuestions[currentQuestion];
  const quizBox = document.getElementById("quizBox");
  quizBox.innerHTML = `
    <h4>${q.question}</h4>
    ${q.answers
      .map(
        (ans, i) =>
          `<button onclick="checkAnswer(${i})" style="margin: 5px">${ans}</button>`
      )
      .join("")}
  `;
}

function checkAnswer(index) {
  const q = quizQuestions[currentQuestion];
  if (index === q.correct) {
    alert("‚úÖ –í—è—Ä–Ω–æ!");
  } else {
    alert("‚ùå –ì—Ä–µ—à–∫–∞!");
  }
  currentQuestion = (currentQuestion + 1) % quizQuestions.length;
  showQuestion();
}

document.addEventListener("DOMContentLoaded", () => {
  if (document.getElementById("quizBox")) {
    showQuestion();
  }
});

// Easter Egg ‚Äì Console
console.log("%c–†–µ—Ü–∏–∫–ª–∏—Ä–∞–π —É–º–Ω–æ ‚Äì –±—ä–¥–µ—â–µ—Ç–æ –µ —Ç–≤–æ–µ!", "color: green; font-size: 18px;");

// Typing Effect (optional, fun)
function typeEffect(element, text, speed = 100) {
  let i = 0;
  function typing() {
    if (i < text.length) {
      element.innerHTML += text.charAt(i);
      i++;
      setTimeout(typing, speed);
    }
  }
  typing();
}

document.addEventListener("DOMContentLoaded", () => {
  const typeTarget = document.getElementById("typingHeader");
  if (typeTarget) {
    typeEffect(typeTarget, "–†–µ—Ü–∏–∫–ª–∏—Ä–∞–π. –ü–µ—Å—Ç–∏. –ü–æ–±–µ–∂–¥–∞–≤–∞–π.");
  }
});